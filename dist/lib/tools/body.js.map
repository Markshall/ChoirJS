{"version":3,"sources":["../../../lib/tools/body.js"],"names":["allowedRequest","getData","req","Promise","resolve","reject","buffer","on","data","err","module","exports","res","next","body","headers","indexOf","method","then","console","log","notFound"],"mappings":";;AAAA;;;;AAIA,IAAMA,cAAc,GAAG,CAAC,MAAD,EAAS,KAAT,EAAgB,QAAhB,EAA0B,SAA1B,CAAvB;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAIC,MAAM,GAAG,EAAb;AACAJ,IAAAA,GAAG,CAACK,EAAJ,CAAO,MAAP,EAAe,UAACC,IAAD,EAAU;AACvBF,MAAAA,MAAM,IAAIE,IAAV;AACD,KAFD;AAIAN,IAAAA,GAAG,CAACK,EAAJ,CAAO,KAAP,EAAc,YAAM;AAClBH,MAAAA,OAAO,CAACE,MAAD,CAAP;AACD,KAFD;AAIAJ,IAAAA,GAAG,CAACK,EAAJ,CAAO,OAAP,EAAgB,UAACE,GAAD,EAAS;AACvBJ,MAAAA,MAAM,CAACI,GAAD,CAAN;AACD,KAFD;AAGD,GAbM,CAAP;AAcD;;AAEDC,MAAM,CAACC,OAAP,GAAiB,UAACT,GAAD,EAAMU,GAAN,EAAWC,IAAX,EAAoB;AACnC;AACA;AACAX,EAAAA,GAAG,CAACY,IAAJ,GAAW,IAAX;;AACA,MACEZ,GAAG,CAACa,OAAJ,CAAY,cAAZ,MAAgC,mCAAhC,IACGf,cAAc,CAACgB,OAAf,CAAuBd,GAAG,CAACe,MAA3B,MAAuC,CAAC,CAF7C,EAGE;AACAhB,IAAAA,OAAO,CAACC,GAAD,CAAP,CAAagB,IAAb,CAAkB,UAACZ,MAAD,EAAY;AAC5BJ,MAAAA,GAAG,CAACY,IAAJ,GAAWR,MAAX;AACAO,MAAAA,IAAI;AACL,KAHD,WAGS,UAACJ,GAAD,EAAS;AAChBU,MAAAA,OAAO,CAACC,GAAR,CAAYX,GAAZ;AACAG,MAAAA,GAAG,CAACS,QAAJ,CAAaZ,GAAb;AACD,KAND,EADA,CAQA;AACD,GAZD,MAYO;AACLI,IAAAA,IAAI;AACL;AACF,CAnBD","sourcesContent":["/*\n * Handle POST body data.\n * Output is not parsed.\n */\nconst allowedRequest = ['POST', 'PUT', 'DELETE', 'OPTIONS'];\n\nfunction getData(req) {\n  return new Promise((resolve, reject) => {\n    let buffer = '';\n    req.on('data', (data) => {\n      buffer += data;\n    });\n\n    req.on('end', () => {\n      resolve(buffer);\n    });\n\n    req.on('error', (err) => {\n      reject(err);\n    });\n  });\n}\n\nmodule.exports = (req, res, next) => {\n  // console.log(req);\n  // console.log('Hehe');\n  req.body = null;\n  if (\n    req.headers['content-type'] === 'application/x-www-form-urlencoded'\n    && allowedRequest.indexOf(req.method) !== -1\n  ) {\n    getData(req).then((buffer) => {\n      req.body = buffer;\n      next();\n    }).catch((err) => {\n      console.log(err);\n      res.notFound(err);\n    });\n    // next();\n  } else {\n    next();\n  }\n};\n"],"file":"body.js"}