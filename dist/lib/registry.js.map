{"version":3,"sources":["../../lib/registry.js"],"names":["Registry","routes","regex","name","middleware","push","route","Array","isArray","url","i","length","test","exec","splice","index","input","groups","error"],"mappings":";;;;;;;;;;;;;IAAqBA,Q;;;AACnB,sBAAc;AAAA;;AACZ,SAAKC,MAAL,GAAc,EAAd;AACD;;;;wBAEGC,K,EAAOC,I,EAAuB;AAAA,UAAjBC,UAAiB,uEAAJ,EAAI;AAChC,WAAKH,MAAL,CAAYI,IAAZ,CAAiB;AACfC,QAAAA,KAAK,EAAEJ,KADQ;AAEfC,QAAAA,IAAI,EAAJA,IAFe;AAGfC,QAAAA,UAAU,EAAGG,KAAK,CAACC,OAAN,CAAcJ,UAAd,CAAD,GAA8BA,UAA9B,GAA2C,CAACA,UAAD;AAHxC,OAAjB;AAKD;;;0BAEKK,G,EAAK;AACT,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKT,MAAL,CAAYU,MAAhC,EAAwCD,CAAC,IAAI,CAA7C,EAAgD;AAC9C;;;AAGA;AACA,YAAI,OAAO,KAAKT,MAAL,CAAYS,CAAZ,EAAeJ,KAAf,CAAqBM,IAA5B,KAAqC,UAAzC,EAAqD;AACnD;AACA,cAAI,KAAKX,MAAL,CAAYS,CAAZ,EAAeJ,KAAf,CAAqBM,IAArB,CAA0BH,GAA1B,CAAJ,EAAoC;AAClC,gBAAMI,IAAI,GAAG,KAAKZ,MAAL,CAAYS,CAAZ,EAAeJ,KAAf,CAAqBO,IAArB,CAA0BJ,GAA1B,CAAb;AACA;;;;AAGAI,YAAAA,IAAI,CAACC,MAAL,CAAY,CAAZ,EAAe,CAAf;AACA,mBAAOD,IAAI,CAACE,KAAZ;AACA,mBAAOF,IAAI,CAACG,KAAZ;AACA,mBAAOH,IAAI,CAACI,MAAZ;AAEA,mBAAO;AACLC,cAAAA,KAAK,EAAE,KADF;AAELZ,cAAAA,KAAK,EAAE,KAAKL,MAAL,CAAYS,CAAZ,EAAeP,IAFjB;AAGLC,cAAAA,UAAU,EAAE,KAAKH,MAAL,CAAYS,CAAZ,EAAeN,UAHtB;AAILS,cAAAA,IAAI,EAAJA;AAJK,aAAP;AAMD;AACF,SAnBD,MAmBO,IAAI,KAAKZ,MAAL,CAAYS,CAAZ,EAAeJ,KAAf,KAAyBG,GAA7B,EAAkC;AACvC,iBAAO;AACLS,YAAAA,KAAK,EAAE,KADF;AAELZ,YAAAA,KAAK,EAAE,KAAKL,MAAL,CAAYS,CAAZ,EAAeP,IAFjB;AAGLC,YAAAA,UAAU,EAAE,KAAKH,MAAL,CAAYS,CAAZ,EAAeN,UAHtB;AAILS,YAAAA,IAAI,EAAE;AAJD,WAAP;AAMD;AACF;;AACD,aAAO;AACLK,QAAAA,KAAK,EAAE;AADF,OAAP;AAGD","sourcesContent":["export default class Registry {\n  constructor() {\n    this.routes = [];\n  }\n\n  add(regex, name, middleware = []) {\n    this.routes.push({\n      route: regex,\n      name,\n      middleware: (Array.isArray(middleware)) ? middleware : [middleware],\n    });\n  }\n\n  check(url) {\n    for (let i = 0; i < this.routes.length; i += 1) {\n      /*\n       * Check if the route field is a regex or string.\n       */\n      // console.log(this.routes);\n      if (typeof this.routes[i].route.test === 'function') {\n        // console.log(url.replace('/', ''));\n        if (this.routes[i].route.test(url)) {\n          const exec = this.routes[i].route.exec(url);\n          /*\n           * Remove unnecessary parameters.\n           */\n          exec.splice(0, 1);\n          delete exec.index;\n          delete exec.input;\n          delete exec.groups;\n\n          return {\n            error: false,\n            route: this.routes[i].name,\n            middleware: this.routes[i].middleware,\n            exec,\n          };\n        }\n      } else if (this.routes[i].route === url) {\n        return {\n          error: false,\n          route: this.routes[i].name,\n          middleware: this.routes[i].middleware,\n          exec: null,\n        };\n      }\n    }\n    return {\n      error: true,\n    };\n  }\n}\n"],"file":"registry.js"}